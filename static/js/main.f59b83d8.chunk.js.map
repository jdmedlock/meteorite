{"version":3,"sources":["components/TopBar.js","components/SearchTerms.js","components/SearchButton.js","components/Search.js","components/Meteorite.js","components/MeteoriteTable.js","components/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","fontWeight","grow","props","title","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchTerms","handleChange","bind","assertThisInitialized","emitChangeDebounce","debounce","queryName","saveSearchTerms","event","target","value","enteredText","setState","Input_default","placeholder","input","onChange","inputProps","aria-label","React","Component","theme","container","display","flexWrap","backgroundColor","palette","common","white","margin","spacing","unit","button","primary","light","clickHandler","Button_default","onClick","publishSearchTerms","SearchTerms","components_SearchButton","CustomTableCell","head","black","body","fontSize","TableCell","width","marginTop","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","strike","mass","Number","parseFloat","toFixed","impactYear","year","split","TableRow_default","key","id","component","scope","name","numeric","nametype","recclass","fall","reclat","reclong","MeteoriteTable","page","rowsPerPage","meteoriteStrikes","handleChangePage","handleChangeRowsPerPage","_this$props","_this$state","Paper_default","tableWrapper","Table_default","padding","TableHead_default","MeteoriteTable_CustomTableCell","TableBody_default","filter","toLowerCase","includes","slice","map","components_Meteorite","TablePagination_default","rowsPerPageOptions","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","menuButton","marginLeft","marginRight","href","rel","App","isDataLoaded","_this2","fetch","process","then","response","json","strikesJSON","components_TopBar","components_Search","components_MeteoriteTable","components_BottomBar","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","concat","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f59b83d8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    fontWeight: 800,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n};\n\nconst TopBar = (props) => {\n  const { title, classes } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h4\" color=\"inherit\" className={classes.grow}>\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nTopBar.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TopBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from \"lodash.debounce\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    backgroundColor: theme.palette.common.white,\n    margin: theme.spacing.unit,  },\n});\n\nclass Search extends React.Component {\n\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    saveSearchTerms: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    // SearchPage state\n    this.state = {\n      searchTerms: \"\",\n    };\n\n    // Bind 'this' to the event handlers so they'll have the proper context\n    this.handleChange = this.handleChange.bind(this);\n    this.emitChangeDebounce = debounce(this.queryName, 75);\n\n    this.classes = props.classes;\n    this.saveSearchTerms = props.saveSearchTerms;\n  }\n\n  handleChange(event) {\n    // Add input entered by the user to the searchText element in\n    // our state. Keystrokes are debounced to prevend the queryLocation function\n    // from being called too many times in succession to reduce overhead.\n    this.emitChangeDebounce(event.target.value);\n  }\n\n  queryName(enteredText) {\n    this.setState({ searchTerms: enteredText });\n    this.saveSearchTerms(enteredText);\n  }\n\n  render() {\n    return (\n      <Input\n        placeholder=\"Enter search terms\"\n        className={this.classes.input}\n        variant=\"outlined\"\n        onChange={ this.handleChange }\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    );\n  }\n}\n\nexport default withStyles(styles)(Search);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    backgroundColor: theme.palette.primary.light,\n    fontWeight: 600,\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst SearchButton = (props) => {\n  const { classes, clickHandler } = props;\n  return (\n    <Button variant=\"contained\" className={classes.button} onClick={clickHandler} >\n      Search\n    </Button>\n  );\n}\n\nSearchButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(SearchButton);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchTerms from './SearchTerms';\nimport SearchButton from './SearchButton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    backgroundColor: theme.palette.common.white,\n    margin: \"1rem\",\n  },\n});\n\nclass Search extends React.Component {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    publishSearchTerms: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchTerms: '',\n    };\n\n    this.classes = props.classes;\n    this.publishSearchTerms = props.publishSearchTerms;\n    this.clickHandler = this.clickHandler.bind(this);\n    this.saveSearchTerms = this.saveSearchTerms.bind(this);\n  }\n\n  saveSearchTerms(searchTerms) {\n    this.setState({ searchTerms: searchTerms });\n  }\n\n  clickHandler() {\n    this.publishSearchTerms(this.state.searchTerms);\n  }\n\n  render() {\n    return (\n      <div className={this.classes.container} >\n        <SearchTerms saveSearchTerms={this.saveSearchTerms} />\n        <SearchButton clickHandler={this.clickHandler} />\n      </div>\n    );\n   }\n}\n\nexport default withStyles(styles)(Search);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 16,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nconst Meteorite = (props) => {\n  const { strike, classes } = props;\n  const mass = Number.parseFloat(strike.mass).toFixed(0);\n  // Extract the year from the ISO8601 formatted strike.year\n  const impactYear = (strike.year) != null ? strike.year.split('-')[0] : \"undefined\";\n\n  return (\n    <TableRow className={classes.row} key={strike.id}>\n      <CustomTableCell component=\"th\" scope=\"row\">{strike.name}</CustomTableCell>\n      <CustomTableCell numeric>{strike.id}</CustomTableCell>\n      <CustomTableCell>{strike.nametype}</CustomTableCell>\n      <CustomTableCell>{strike.recclass}</CustomTableCell>\n      <CustomTableCell numeric>{mass}</CustomTableCell>\n      <CustomTableCell>{strike.fall}</CustomTableCell>\n      <CustomTableCell numeric>{impactYear}</CustomTableCell>\n      <CustomTableCell numeric>{strike.reclat}</CustomTableCell>\n      <CustomTableCell numeric>{strike.reclong}</CustomTableCell>\n    </TableRow>\n  );\n}\n\nMeteorite.propTypes = {\n  strike: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Meteorite);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Meteorite from './Meteorite';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#FFB564\",\n    color: \"#3B3939\",\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nclass  MeteoriteTable extends React.Component {\n\n  static propTypes = {\n    meteoriteStrikes: PropTypes.array.isRequired,\n    searchTerms: PropTypes.string.isRequired,\n    classes: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 0,\n      rowsPerPage: 5,\n    };\n\n    this.classes = props.classes;\n    this.meteoriteStrikes = props.meteoriteStrikes;\n    this.searchTerms  = props.SearchTerms;\n\n    this.handleChangePage = this.handleChangePage.bind(this);\n    this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n  }\n\n  handleChangePage(event, page) {\n    this.setState({ page });\n  }\n\n  handleChangeRowsPerPage(event) {\n    this.setState({ rowsPerPage: event.target.value });\n  }\n\n  render() {\n    const { classes, meteoriteStrikes, searchTerms } = this.props;\n    const { rowsPerPage, page } = this.state;\n\n    return (\n      <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} padding=\"dense\">\n            <TableHead>\n              <TableRow>\n                <CustomTableCell>Name</CustomTableCell>\n                <CustomTableCell numeric>Id</CustomTableCell>\n                <CustomTableCell>Name Type</CustomTableCell>\n                <CustomTableCell>Rec Class</CustomTableCell>\n                <CustomTableCell numeric>Mass (g)</CustomTableCell>\n                <CustomTableCell>Fall</CustomTableCell>\n                <CustomTableCell>Year</CustomTableCell>\n                <CustomTableCell>Latitude</CustomTableCell>\n                <CustomTableCell>Longitude</CustomTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {meteoriteStrikes\n                .filter(strike => {\n                  return searchTerms === '' ||\n                        (strike.name).toLowerCase().includes(searchTerms.toLowerCase())\n                })\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(strike => {\n                  return (\n                    <Meteorite className={classes.row} key={strike.id} strike={strike} />\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={meteoriteStrikes.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(MeteoriteTable);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nconst BottomBar = (props) => {\n  const { title, href, classes } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"subtitle1\" color=\"inherit\" className={classes.grow}>\n          <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n          {title}\n          </a>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nBottomBar.propTypes = {\n  title: PropTypes.string,\n  href: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BottomBar);","import React, { Component } from 'react';\n\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Search from './components/Search';\nimport MeteoriteTable from './components/MeteoriteTable';\nimport BottomBar from './components/BottomBar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      meteoriteStrikes: {},\n      isDataLoaded: false,\n      searchTerms: '',\n    };\n\n    this.publishSearchTerms = this.publishSearchTerms.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(process.env.REACT_APP_METEORITE_STRIKE_DATASET)\n    .then((response) => {\n      return response.json();\n    })\n    .then((strikesJSON) => {\n      this.setState({ meteoriteStrikes: strikesJSON });\n      this.setState({ isDataLoaded: true});\n    });\n  }\n\n  publishSearchTerms(searchTerms) {\n    this.setState({ searchTerms: searchTerms });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TopBar title=\"Meteorite Explorer\"/>\n        </header>\n\n        <section className=\"App-search\">\n          <Search publishSearchTerms={this.publishSearchTerms} />\n        </section>\n\n        <section className=\"App-results\">\n          <div>\n            {this.state.isDataLoaded ?\n              ( <MeteoriteTable meteoriteStrikes={ this.state.meteoriteStrikes }\n                  searchTerms={ this.state.searchTerms } /> )\n              : (' ')\n            }\n          </div>\n        </section>\n\n        <footer className=\"App-footer\">\n          <BottomBar title=\"Data courtesy Nasa Open Data Portal\"\n            href={ process.env.REACT_APP_METEORITE_LANDING_HOMEPAGE } />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}