{"version":3,"sources":["components/TopBar.js","components/SearchTerms.js","components/SearchButton.js","components/Search.js","components/Meteorite.js","components/MeteoriteTable.js","components/BottomBar.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","fontWeight","grow","props","title","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","className","theme","container","display","flexWrap","input","backgroundColor","palette","common","white","margin","spacing","unit","Input_default","placeholder","inputProps","aria-label","button","secondary","light","Button_default","SearchTerms","components_SearchButton","CustomTableCell","head","black","body","fontSize","TableCell","width","marginTop","overflowX","table","minWidth","row","&:nth-of-type(odd)","background","default","strike","mass","Number","parseFloat","toFixed","impactYear","year","split","TableRow_default","key","id","component","scope","name","numeric","nametype","recclass","fall","reclat","reclong","meteoriteStrikes","Paper_default","Table_default","padding","TableHead_default","MeteoriteTable_CustomTableCell","TableBody_default","map","components_Meteorite","menuButton","marginLeft","marginRight","href","target","rel","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isDataLoaded","fetch","response","json","setState","console","log","components_TopBar","components_Search","BrowserRouter","basename","process","components_MeteoriteTable","components_BottomBar","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48eb46fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n    fontWeight: 800,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n};\n\nconst TopBar = (props) => {\n  const { title, classes } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h4\" color=\"inherit\" className={classes.grow}>\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nTopBar.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TopBar);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    backgroundColor: theme.palette.common.white,\n    margin: theme.spacing.unit,  },\n});\n\nconst Search = (props) => {\n  const { classes } = props;\n  return (\n    <Input\n      placeholder=\"Enter search terms\"\n      className={classes.input}\n      variant=\"outlined\"\n      inputProps={{\n        'aria-label': 'Description',\n      }}\n    />\n  );\n}\n\nSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Search);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  button: {\n    backgroundColor: theme.palette.secondary.light,\n    fontWeight: 600,\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nconst SearchButton = (props) => {\n  const { classes } = props;\n  return (\n    <Button variant=\"contained\" className={classes.button}>\n      Search\n    </Button>\n  );\n}\n\nSearchButton.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(SearchButton);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchTerms from './SearchTerms';\nimport SearchButton from './SearchButton';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    backgroundColor: theme.palette.common.white,\n  },\n});\n\nconst Search = (props) => {\n  const { classes } = props;\n  return (\n    <div className={classes.input}>\n      <SearchTerms />\n      <SearchButton />\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Search);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nconst Meteorite = (props) => {\n  const { strike, classes } = props;\n  const mass = Number.parseFloat(strike.mass).toFixed(0);\n  const impactYear = (strike.year) != null ? strike.year.split('-')[0] : \"undefined\";\n\n  return (\n    <TableRow className={classes.row} key={strike.id}>\n      <CustomTableCell component=\"th\" scope=\"row\">{strike.name}</CustomTableCell>\n      <CustomTableCell numeric>{strike.id}</CustomTableCell>\n      <CustomTableCell>{strike.nametype}</CustomTableCell>\n      <CustomTableCell>{strike.recclass}</CustomTableCell>\n      <CustomTableCell numeric>{mass}</CustomTableCell>\n      <CustomTableCell>{strike.fall}</CustomTableCell>\n      <CustomTableCell numeric>{impactYear}</CustomTableCell>\n      <CustomTableCell numeric>{strike.reclat}</CustomTableCell>\n      <CustomTableCell numeric>{strike.reclong}</CustomTableCell>\n    </TableRow>\n  );\n}\n\nMeteorite.propTypes = {\n  strike: PropTypes.object.isRequired,\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Meteorite);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Meteorite from './Meteorite';\n\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#FFB564\",\n    color: \"#3B3939\",\n    fontSize: 18,\n    fontWeight: 600,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n  },\n  table: {\n    minWidth: 700,\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n});\n\nconst MeteoriteTable = (props) => {\n  const { classes, meteoriteStrikes } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table} padding=\"dense\">\n        <TableHead>\n          <TableRow>\n            <CustomTableCell>Name</CustomTableCell>\n            <CustomTableCell numeric>Id</CustomTableCell>\n            <CustomTableCell>Name Type</CustomTableCell>\n            <CustomTableCell>Rec Class</CustomTableCell>\n            <CustomTableCell numeric>Mass (g)</CustomTableCell>\n            <CustomTableCell>Fall</CustomTableCell>\n            <CustomTableCell>Year</CustomTableCell>\n            <CustomTableCell>Latitude</CustomTableCell>\n            <CustomTableCell>Longitude</CustomTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {meteoriteStrikes.map(strike => {\n            return (\n              <Meteorite className={classes.row} key={strike.id} strike={strike} />\n            );\n          })}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n\nMeteoriteTable.propTypes = {\n  meteoriteStrikes: PropTypes.array.isRequired,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MeteoriteTable);","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nconst BottomBar = (props) => {\n  const { title, classes } = props;\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          <a href=\"https://data.nasa.gov/Space-Science/Meteorite-Landings/gh4g-9sfh\"\n            target=\"_blank\" rel=\"noopener noreferrer\">\n          {title}\n          </a>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nBottomBar.propTypes = {\n  title: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(BottomBar);","import React, { Component } from 'react';\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport Search from './components/Search';\nimport MeteoriteTable from './components/MeteoriteTable';\nimport BottomBar from './components/BottomBar';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // App state\n    this.state = {\n      meteoriteStrikes: {},\n      isDataLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://data.nasa.gov/resource/y77d-th95.json\");\n    const json = await response.json();\n    this.setState({ meteoriteStrikes: json });\n    this.setState({ isDataLoaded: true});\n    console.log('meteoriteStrikes json: ', this.state.meteoriteStrikes);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <TopBar title=\"Meteorite Explorer\"/>\n        </header>\n\n        <section className=\"App-search\">\n          <Search />\n        </section>\n\n        <section className=\"App-results\">\n          <BrowserRouter basename={ process.env.PUBLIC_URL }>\n            <div>\n              {this.state.isDataLoaded ?\n                ( <MeteoriteTable meteoriteStrikes={ this.state.meteoriteStrikes } /> )\n                : (' ')\n              }\n            </div>\n          </BrowserRouter>\n        </section>\n\n        <footer className=\"App-footer\">\n          <BottomBar title=\"Data courtesy Nasa Open Data Portal\"/>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}